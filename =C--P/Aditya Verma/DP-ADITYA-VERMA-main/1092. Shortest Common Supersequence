class Solution {
public:
    string shortestCommonSupersequence(string str1, string str2) {
       int m=str1.length(),n=str2.length();
        int **dp=new int *[m+1];
        for(int i=0;i<=m;i++)
            dp[i]=new int[n+1];
        
        for(int i=0;i<=m;i++)
        {
            for(int j=0;j<=n;j++)
            {
                if(!i||!j)
                    dp[i][j]=0;
                else if(str1[i-1]==str2[j-1])
                        dp[i][j]=1+dp[i-1][j-1];
                else
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
            }
        }
        string s;
        int i=m,j=n;
        while(i>0&&j>0)
        {
            if(str1[i-1]==str2[j-1])
            {
                s.push_back(str1[i-1]);
                i--;
                j--;
            }
            else if(dp[i-1][j]>dp[i][j-1])
            {
                
                    s.push_back(str1[i-1]);
                    i--;
            }
           else
            {
                    s.push_back(str2[j-1]);
                    j--;
            }
        }
        while(i>0)
        {
             s.push_back(str1[i-1]);
             i--;
        }
         while(j>0)
        {
             s.push_back(str2[j-1]);
             j--;
        }
        reverse(s.begin(),s.end());
        return s;
    }
};
