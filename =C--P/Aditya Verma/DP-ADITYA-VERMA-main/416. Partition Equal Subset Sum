class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int sum=0;
        for(int i=0;i<nums.size();i++)
        {
            sum+=nums[i];
        }
        
        if(sum%2)
            return false;
        else
        {
            sum/=2;
            bool **dp=new bool*[nums.size()+1];
            for(int i=0;i<=nums.size();i++)
                dp[i]=new bool[sum+1];
            
            for(int i=0;i<=nums.size();i++)
                dp[i][0]=true;
            
            for(int i=1;i<=sum;i++)
                dp[0][i]=false;
            
            for(int i=1;i<=nums.size();i++)
            {
                for(int j=1;j<=sum;j++)
                {
                    if(nums[i-1]<=j)
                        dp[i][j]=dp[i-1][j-nums[i-1]]||dp[i-1][j];
                    else
                        dp[i][j]=dp[i-1][j];
                }
            }
            return dp[nums.size()][sum];
        }
        return false;
    }
    
    
     // code here
    
};
