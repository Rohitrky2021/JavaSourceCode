/*
15 50

..................................................
..................................................
..............################....................
..............#..............#....................
..............#..............#....................
..............#..............#....................
..............#..............#....................
..............#..............#....................
..............#..............#....................
..............################....................
..................................................
..................................................
..................................................
..................................................
..................................................
*/


#include <iostream>
using namespace std;

int r, c;

void print(char input[][50]) {
	for (int i = 0; i < r; i++) {
		for (int j = 0; j < c; j++) {
			cout << input[i][j];
		} cout << endl;
	}
}

// W, N, E, S
int dx[] = { -1, 0, 1, 0};
int dy[] = {0, -1, 0, 1};

// ch is the character to be replaced
// color is the character to be added
void floodFill(char mat[][50], int i, int j, char ch, char color) {
	// Base Case
	if (i < 0 || j < 0 || i >= r || j >= c) return;

	// Boundary Condition
	if (mat[i][j] != ch) {
		return;
	}

	// Recursive Case
	mat[i][j] = color;
	for (int k = 0; k < 4; k++) {
		floodFill(mat, i + dx[k], j + dy[k], ch, color);
	}

	print(mat);
	cout << endl;

}

int main() {

	cin >> r >> c;

	char input[15][50];

	for (int i = 0; i < r; i++) {
		for (int j = 0; j < c; j++) {
			cin >> input[i][j];
		}
	}

	floodFill(input, 6, 13, '.', 'r');
}
